<launch>
    <arg name="pkg_gazebo_ros" default="$(find-pkg-share gazebo_ros)" />
    <arg name="leo_rover_package" default="/home/dillon/myROS2WS/src/leo_rover" />
    <arg name="model" default="$(var leo_rover_package)/urdf/leo_erc_sim.urdf" />

    <!-- Set the path to the world file -->
    <arg name="world_file_name" default="marsyard2022.world" />
    <arg name="world_path" default="$(var leo_rover_package)/worlds/$(var world_file_name)" />
    <arg name="world" default="$(var world_path)" />
    
    <!-- Set the path to the SDF model files -->
    <arg name="gazebo_models_path" default="$(var leo_rover_package)/models/marsyard2022_terrain" />
    
    

    <!-- Start Gazebo server -->
    <include file="$(var pkg_gazebo_ros)/launch/gzserver.launch.py">
    <arg name="world" value="$(var world)" />
    </include>

    <!-- Start Gazebo client -->
    <include file="$(var pkg_gazebo_ros)/launch/gzclient.launch.py" />

    <!-- Spawn rover entity -->
    <node name="spawn_robot_urdf" pkg="gazebo_ros" exec="spawn_entity.py"
    args="-file $(var model) -x -17.003807 -y 7.617856 -z 1.5 -entity my_robot" output="screen" />

    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher" output="screen">
    <param name="robot_description" value="$(command 'cat $(var model)')"/>
    <param name="use_sim_time" value="true" />
    </node>

    <!-- SLAM stack -->
    <include file="$(find-pkg-share slam_toolbox)/launch/online_async_launch.py">
        <arg name="params_file" value="$(var leo_rover_package)/params/mapper_params_online_async.yaml"/>
        <arg name="use_sim_time" value="true"/>
    </include>

    <!-- Navigation stack -->
    <include file="$(find-pkg-share nav2_bringup)/launch/navigation_launch.py">
        <arg name="params_file" value="$(var leo_rover_package)/params/nav2_params.yaml"/>
        <arg name="map" value="$(var leo_rover_package)/maps/map.yaml"/>
        <arg name="use_sim_time" value="true"/>
    </include>

    <!-- RVIZ2 -->
    <node name="rviz" pkg="rviz2" exec="rviz2"  args="-d /home/dillon/myROS2WS/src/leo_rover/config/nav.rviz">
      <param name="use_sim_time" value="true" />
    </node>

    <!-- Launch cmd_vel_relay -->
  <node
    pkg="leo_nodes"
    exec="cmd_vel_relay"
    name="cmd_vel_relay"
    output="screen">
  </node>

  <!-- Launch ground_truth_filter_node -->
  <node
    pkg="leo_nodes"
    exec="ground_truth_filter"
    name="ground_truth_filter"
    output="screen">
  </node>

  <!-- Launch odom_compat_node 
  <node
    pkg="leo_nodes"
    exec="odom_compat_node"
    name="odom_compat"
    output="screen">
  </node>-->

  <!-- Launch pdu_node -->
  <node
    pkg="leo_nodes"
    exec="pdu_node"
    name="pdu_node"
    output="screen"
    launch-prefix="gnome-terminal --">
    <param name="probe_model" value="$(var leo_rover_package)/urdf/probe.urdf" />
  </node>

  <node
    pkg="leo_nodes"
    exec="zed2_imu_transform_broadcaster"
    name="zed2_imu_transform_broadcaster"
    output="screen">
  </node>
    <node name="ekf_localization_node"
        pkg="robot_localization"
        exec="ekf_node" output="screen">
        <param name="use_sim_time" value="true"/>
        <param name="params_file" value="$(var leo_rover_package)/config/ekf_localization.yaml"/>
    </node>
<!--

    <node pkg="pointcloud_to_laserscan" exec="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/zed2_left_camera/points" />
        <remap from="scan" to="/scan" />
        <param name="scan_time" value="0.1" />
        <param name="range_min" value="0.1" />
        <param name="range_max" value="10.0" />

        <param name="angle_increment" value="0.01" />
    </node>-->

</launch>
